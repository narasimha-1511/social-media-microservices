version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backend
  
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q" , "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - backend

  users-db:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=db
    ports:
      - 27017:27017
    networks:
      - backend
  
  posts-db:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=db
    ports:
      - 27018:27017
    networks:
      - backend

  media-db:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=db
    ports:
      - 27019:27017
    networks:
      - backend

  search-db:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=db
    ports:
      - 27020:27017
    networks:
      - backend

  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    depends_on:
      - users-db
      - redis
    environment:
      - PORT=3001
      - NODE_ENV=prod
      - JWT_SECRET=secret
      - MONGODB_URI=mongodb://user:pass@users-db:27017/db?authSource=admin
      - REDIS_URL=redis://redis:6379
    networks:
      - backend

  post-service:
    build: ./post-service
    ports:
      - "3002:3002"
    depends_on:
      - rabbitmq
      - posts-db
      - redis
    environment:
      - PORT=3002
      - NODE_ENV=prod
      - MONGODB_URI=mongodb://user:pass@posts-db:27017/db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - backend
  media-service:
    build: ./media-service
    ports:
      - "3003:3003"
    depends_on:
      - rabbitmq
      - media-db
      - redis
    environment:
      - PORT=3003
      - NODE_ENV=prod
      - CLOUDINARY_CLOUD_NAME=<use_yours>
      - CLOUDINARY_API_KEY=<use_yours>
      - CLOUDINARY_API_SECRET=<use_yours>
      - CLOUDINARY_URL=<use_yours>
      - MONGODB_URI=mongodb://user:pass@media-db:27017/db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - backend
  search-service:
    build: ./search-service
    ports:
      - "3004:3004"
    depends_on:
      - rabbitmq
      - search-db
      - redis
    environment:
      - NODE_ENV=prod
      - PORT=3004
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - MONGODB_URI=mongodb://user:pass@search-db:27017/db?authSource=admin
    networks:
      - backend
  api-gateway:
    build: ./api-gateway
    ports:
    - "3000:3000"
    depends_on:
      - redis
      - user-service
      - post-service
      - media-service
      - search-service
    environment:
      - REDIS_URL=redis://redis:6379
      - PORT=3000
      - USER_SERVICE_URL=http://user-service:3001
      - POST_SERVICE_URL=http://post-service:3002
      - MEDIA_SERVICE_URL=http://media-service:3003
      - SEARCH_SERVICE_URL=http://search-service:3004
      - NODE_ENV=prod
      - JWT_SECRET=secret
    networks:
      - backend

networks:
  backend: